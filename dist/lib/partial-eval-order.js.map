{"version":3,"sources":["../../src/lib/partial-eval-order.js"],"names":["partialEvalOrder","providesTo","globalOrder","inputs","next","toEval","isEmpty","node","peek","shift","toAdd","get","filterNot","has","bind","union","unshiftAll","filter"],"mappings":";;;;;kBAEwBA,gB;;AAFxB;;AAEe,SAASA,gBAAT,CAA0BC,UAA1B,EAAsCC,WAAtC,EAAmDC,MAAnD,EAA2D;AACxE,MAAIC,OAAO,qBAAUD,MAAV,CAAX;AACA,MAAIE,SAAS,mBAAQF,MAAR,CAAb;AACA,SAAQ,CAACC,KAAKE,OAAL,EAAT,EAA0B;AACxB,QAAMC,OAAOH,KAAKI,IAAL,EAAb;AACAJ,WAAOA,KAAKK,KAAL,EAAP;AACA,QAAMC,QAAQT,WAAWU,GAAX,CAAeJ,IAAf,EAAqB,qBAArB,EACWK,SADX,CACqBP,OAAOQ,GAAP,CAAWC,IAAX,CAAgBT,MAAhB,CADrB,CAAd;AAEAA,aAASA,OAAOU,KAAP,CAAaL,KAAb,CAAT;AACAN,WAAOA,KAAKY,UAAL,CAAgBN,KAAhB,CAAP;AACD;AACD,SAAOR,YAAYe,MAAZ,CAAmBZ,OAAOQ,GAAP,CAAWC,IAAX,CAAgBT,MAAhB,CAAnB,CAAP;AACD","file":"partial-eval-order.js","sourcesContent":["import { Stack, List, Set } from 'immutable';\n\nexport default function partialEvalOrder(providesTo, globalOrder, inputs) {\n  let next = new Stack(inputs);\n  let toEval = new Set(inputs);\n  while ( !next.isEmpty() ) {\n    const node = next.peek();\n    next = next.shift();\n    const toAdd = providesTo.get(node, new List())\n                            .filterNot(toEval.has.bind(toEval));\n    toEval = toEval.union(toAdd);\n    next = next.unshiftAll(toAdd);\n  }\n  return globalOrder.filter(toEval.has.bind(toEval));\n}\n"]}