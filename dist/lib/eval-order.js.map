{"version":3,"sources":["../../src/lib/eval-order.js"],"names":["evalOrder","cellDeps","all","happensBefores","entrySeq","flatMap","after","befores","map","before","toA1Ref","toJS","array","i","fromA1Ref"],"mappings":";;;;;;;;kBASwBA,S;;AATxB;;AACA;;AACA;;;;;;AAEA;;;;;AAKe,SAASA,SAAT,CAAmBC,QAAnB,EAA6BC,GAA7B,EAAkC;AAC/C,MAAMC,iBAAiBF,SAASG,QAAT,GAAoBC,OAApB,CAA4B;AAAA;AAAA,QAAEC,KAAF;AAAA,QAASC,OAAT;;AAAA,WACjDA,QAAQC,GAAR,CAAY,UAACC,MAAD;AAAA,aAAY,CAACA,OAAOC,OAAP,EAAD,EAAmBJ,MAAMI,OAAN,EAAnB,CAAZ;AAAA,KAAZ,CADiD;AAAA,GAA5B,EAEpBC,IAFoB,EAAvB;;AAIA,SAAO,oBACL,mBAASC,KAAT,CACEV,IAAIM,GAAJ,CAAQ,UAACK,CAAD;AAAA,WAAOA,EAAEH,OAAF,EAAP;AAAA,GAAR,EAA4BC,IAA5B,EADF,EAEER,cAFF,CADK,EAKLK,GALK,CAKD,qBAAQM,SALP,CAAP;AAMD","file":"eval-order.js","sourcesContent":["import { CellRef } from 'sheety-model';\nimport { List } from 'immutable';\nimport toposort from 'toposort';\n\n/**\n * evalOrder takes a Map from CellRef to a collection of CellRefs (like\n * that returned by deps) and a Set of all CellRefs and returns\n * an ordered List of the cells to evaluate, first to last.\n **/\nexport default function evalOrder(cellDeps, all) {\n  const happensBefores = cellDeps.entrySeq().flatMap(([after, befores]) => (\n    befores.map((before) => [before.toA1Ref(), after.toA1Ref()])\n  )).toJS();\n\n  return new List(\n    toposort.array(\n      all.map((i) => i.toA1Ref()).toJS(),\n      happensBefores\n    )\n  ).map(CellRef.fromA1Ref);\n}\n"]}